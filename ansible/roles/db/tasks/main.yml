### REDDIS ###
- name: install Redis
  ansible.builtin.command: apt-get install -y redis-server

- name: ensure Redis is running and enabled
  ansible.builtin.service:
    name: redis-server
    state: started
    enabled: yes

### POSTGRES ###
- name: install postgres
  ansible.builtin.command: apt-get install -y postgresql-14

- name: ensure postgres is running and enabled
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes

- name: stop postgres to make changes to the default db location
  ansible.builtin.service:
    name: postgresql
    state: stopped

- name: give root login permissions to the db
  ansible.builtin.shell:
    cmd: |
      cp /etc/postgresql/14/main/pg_hba.conf /etc/postgresql/14/main/pg_hba.conf.backup &&
      sed -i "s/local   all             all                                     peer/local   all             all                                     trust/" /etc/postgresql/14/main/pg_hba.conf
      sed -i "s/local   all             postgres                                peer/local   all             postgres                                trust/" /etc/postgresql/14/main/pg_hba.conf

- name: ensure backup directory exists and has appropriate permissions
  ansible.builtin.file:
    path: /mnt/volume_missinglink_pg_db/backup
    state: directory
    mode: "0777"
    group: "postgres"
    owner: "postgres"

- name: ensure main data directory exists and has appropriate permissions
  ansible.builtin.file:
    path: /mnt/volume_missinglink_pg_db/main
    state: directory
    mode: "0700"
    group: "postgres"
    owner: "postgres"

- name: copy over existing postgres database files into the new folder
  ansible.builtin.shell: |
    sudo rsync -av /var/lib/postgresql/14/main /mnt/volume_missinglink_pg_db/

- name: edit the PostgreSQL configuration file to point to the new data directory
  ansible.builtin.shell: |
    sed -i "s|data_directory = '/var/lib/postgresql/14/main'|data_directory = '/mnt/volume_missinglink_pg_db/main'|" /etc/postgresql/14/main/postgresql.conf

# this is disabled in all productions that aren't 'prod' in
- name: set up the cronjob to run the backup once every 6 hours
  ansible.builtin.cron:
    name: "backing up dbs every 6 hours"
    hour: "*/6"
    job: "sh {{ backup_script_dest_path }}/backup_db.sh"
    user: "root"

- name: start postgres
  ansible.builtin.service:
    name: postgresql
    state: started
